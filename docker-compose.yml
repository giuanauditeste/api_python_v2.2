services:
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CHOSEN_LLM=${CHOSEN_LLM}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - GEMINI_MODEL=${GEMINI_MODEL}
      - TEMPERATURE=${TEMPERATURE}
      - MAX_TOKENS=${MAX_TOKENS}
      - TOP_P=${TOP_P}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}

  celery_app_worker:
    build: .
    command: celery -A app.celery worker --loglevel=INFO --concurrency=4
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CHOSEN_LLM=${CHOSEN_LLM}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - GEMINI_MODEL=${GEMINI_MODEL}
      - TEMPERATURE=${TEMPERATURE}
      - MAX_TOKENS=${MAX_TOKENS}
      - TOP_P=${TOP_P}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}

  flower:
    image: mher/flower:latest
    env_file:
      - .env
    command:
      - celery
      - flower
      - --broker=${CELERY_BROKER_URL}
      - --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      celery_app_worker:
        condition: service_started

networks:
  my_shared_network:
    external: true